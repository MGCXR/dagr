PROJECT: low_latency-dsec-detection
{'activation': 'relu',
 'after_pool_width': 1,
 'aggr': 'sum',
 'aug_p_flip': 0.5,
 'aug_trans': 0.1,
 'aug_zoom': 1.5,
 'base_width': 0.5,
 'batch_size': 4,
 'checkpoint': 'data/dagr_s_50.pth',
 'clip': 0.1,
 'config': 'config/dagr-s-dsec.yaml',
 'dataset': 'dsec',
 'dataset_directory': '/data/wzk',
 'edge_attr_dim': 2,
 'img_net': 'resnet50',
 'keep_temporal_ordering': False,
 'kernel_size': 5,
 'l_r': 0.0002,
 'max_neighbors': 16,
 'n_nodes': 50000,
 'net_stem_width': 0.5,
 'no_eval': False,
 'no_events': False,
 'num_interframe_steps': 10,
 'num_scales': 2,
 'output_directory': 'log',
 'pooling_aggr': 'max',
 'pooling_dim_at_output': '5x7',
 'radius': 0.01,
 'run_test': False,
 'task': 'detection',
 'time_window_us': 1000000,
 'tot_num_epochs': 801,
 'use_image': True,
 'weight_decay': 1e-05,
 'yolo_stem_width': 0.5}
init datasets
init net
/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torchvision/models/_utils.py:208: UserWarning: The parameter 'pretrained' is deprecated since 0.13 and may be removed in the future, please use 'weights' instead.
  warnings.warn(
/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torchvision/models/_utils.py:223: UserWarning: Arguments other than a weight enum or `None` for 'weights' are deprecated since 0.13 and may be removed in the future. The current behavior is equivalent to passing `weights=ResNet50_Weights.IMAGENET1K_V1`. You can also use `weights=ResNet50_Weights.DEFAULT` to get the most up-to-date weights.
  warnings.warn(msg)
/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/functional.py:534: UserWarning: torch.meshgrid: in an upcoming release, it will be required to pass the indexing argument. (Triggered internally at ../aten/src/ATen/native/TensorShape.cpp:3595.)
  return _VF.meshgrid(tensors, **kwargs)  # type: ignore[attr-defined]
Batch index: 0, Data: DataBatch(x=[410721, 1], y=[4], pos=[410721, 2], p=[4], t=[410721], bbox=[13, 5], bbox_batch=[13], bbox_ptr=[5], bbox0=[13, 5], bbox0_batch=[13], bbox0_ptr=[5], t0=[4], t1=[4], width=[4], height=[4], time_window=[4], image=[4, 3, 215, 320], sequence=[4], batch=[410721], ptr=[5])
Batch index: 1, Data: DataBatch(x=[341037, 1], y=[4], pos=[341037, 2], p=[4], t=[341037], bbox=[11, 5], bbox_batch=[11], bbox_ptr=[5], bbox0=[11, 5], bbox0_batch=[11], bbox0_ptr=[5], t0=[4], t1=[4], width=[4], height=[4], time_window=[4], image=[4, 3, 215, 320], sequence=[4], batch=[341037], ptr=[5])
Batch index: 2, Data: DataBatch(x=[277176, 1], y=[4], pos=[277176, 2], p=[4], t=[277176], bbox=[8, 5], bbox_batch=[8], bbox_ptr=[5], bbox0=[8, 5], bbox0_batch=[8], bbox0_ptr=[5], t0=[4], t1=[4], width=[4], height=[4], time_window=[4], image=[4, 3, 215, 320], sequence=[4], batch=[277176], ptr=[5])
Batch index: 3, Data: DataBatch(x=[420427, 1], y=[4], pos=[420427, 2], p=[4], t=[420427], bbox=[9, 5], bbox_batch=[9], bbox_ptr=[5], bbox0=[10, 5], bbox0_batch=[10], bbox0_ptr=[5], t0=[4], t1=[4], width=[4], height=[4], time_window=[4], image=[4, 3, 215, 320], sequence=[4], batch=[420427], ptr=[5])
Testing :   0%|                                                                                                                                 | 2/3032 [00:01<34:46,  1.45it/s]
Batch index: 4, Data: DataBatch(x=[524146, 1], y=[4], pos=[524146, 2], p=[4], t=[524146], bbox=[6, 5], bbox_batch=[6], bbox_ptr=[5], bbox0=[6, 5], bbox0_batch=[6], bbox0_ptr=[5], t0=[4], t1=[4], width=[4], height=[4], time_window=[4], image=[4, 3, 215, 320], sequence=[4], batch=[524146], ptr=[5])
Batch index: 5, Data: DataBatch(x=[441949, 1], y=[4], pos=[441949, 2], p=[4], t=[441949], bbox=[10, 5], bbox_batch=[10], bbox_ptr=[5], bbox0=[10, 5], bbox0_batch=[10], bbox0_ptr=[5], t0=[4], t1=[4], width=[4], height=[4], time_window=[4], image=[4, 3, 215, 320], sequence=[4], batch=[441949], ptr=[5])
Testing :   0%|â–Ž                                                                                                                                | 7/3032 [00:02<18:02,  2.79it/s]
Traceback (most recent call last):
  File "scripts/run_test.py", line 62, in <module>
    metrics = run_test_with_visualization(test_loader, ema.ema, dataset=args.dataset)
  File "/home/mlc/dagr/src/dagr/utils/testing.py", line 29, in run_test_with_visualization
    for i, data in enumerate(tqdm.tqdm(loader, desc=f"Testing {name}")):
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/tqdm/std.py", line 1181, in __iter__
    for obj in iterable:
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 701, in __next__
    data = self._next_data()
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1445, in _next_data
    return self._process_data(data)
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/utils/data/dataloader.py", line 1491, in _process_data
    data.reraise()
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/_utils.py", line 719, in reraise
    raise exception
AssertionError: Caught AssertionError in DataLoader worker process 3.
Original Traceback (most recent call last):
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/utils/data/_utils/worker.py", line 351, in _worker_loop
    data = fetcher.fetch(index)  # type: ignore[possibly-undefined]
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in fetch
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/mlc/.conda/envs/dagr/lib/python3.8/site-packages/torch/utils/data/_utils/fetch.py", line 52, in <listcomp>
    data = [self.dataset[idx] for idx in possibly_batched_index]
  File "/home/mlc/dagr/src/dagr/data/dsec_data.py", line 146, in __getitem__
    detections_1 = self.dataset.get_tracks(image_index_1, mask=track_masks, directory_name=dataset.root.name)
  File "/home/mlc/dagr/libs/dsec-det/src/dsec_det/dataset.py", line 109, in get_tracks
    i_0, i_1 = self.get_index_window(index, len(img_idx_to_track_idx), sync=self.sync)
  File "/home/mlc/dagr/libs/dsec-det/src/dsec_det/dataset.py", line 99, in get_index_window
    assert 0 <= index < num_idx - 1
AssertionError